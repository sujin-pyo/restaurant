{"version":3,"file":"main.js","mappings":"mBACO,SAASA,EAAKC,EAAMC,GACzBC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,CACd,CCHO,SAASE,IACdD,KAAKE,OAAS,OAChB,CCFO,SAASC,EAAOJ,GACrBC,KAAKD,KAAOA,EACZC,KAAKE,OAAS,OAChB,CDAAD,EAAKG,UAAUC,YAAc,WAC3B,MAAsB,SAAfL,KAAKE,MACd,EAEAD,EAAKG,UAAUE,UAAY,SAAUC,GACnC,IAAIC,EAAOR,KAEX,OADAA,KAAKE,OAAS,UACP,IAAIO,SAAQ,SAAUC,GAC3BC,YAAW,WACTH,EAAKN,OAAS,QACdQ,GACF,GAAGH,EAAKR,KACV,GACF,ECZAI,EAAOC,UAAUC,YAAc,WAC7B,MAAuB,UAAhBL,KAAKE,MACd,EACAC,EAAOC,UAAUQ,YAAc,SAAUL,GACvC,IAAIM,EAASb,KAEb,OADAA,KAAKE,OAAS,UACP,IAAIO,SAAQ,SAAUC,GAC3BC,YAAW,WACTE,EAAOX,OAAS,QAChBQ,GACF,GAAGH,EAAKR,KACV,GACF,ECbA,IAAIe,EAAS,GACTC,EAAU,GACVC,EAAU,GAEdC,SAASC,eAAe,UAAUC,QAAU,WAC1CC,EAAI,IAAIvB,EAAK,MAAO,KACtB,EACAoB,SAASC,eAAe,WAAWC,QAAU,WAC3CC,EAAI,IAAIvB,EAAK,MAAO,KACtB,EACA,IAAIwB,EAAQ,CAAC,IAAIpB,EAAQ,IAAIA,GACzBqB,EAAU,CAAC,IAAInB,EAAO,KAAO,IAAIA,EAAO,MAI5C,SAASoB,EAAOC,EAAIC,GAClB,IAAIC,EAAOT,SAASC,eAAeM,GACnCE,EAAKC,UAAY,GACjBF,EAAMG,SAAQ,SAAUC,GACtB,IAAIC,EAAOb,SAASc,cAAc,MAClCD,EAAKE,YAAcH,EAAK/B,KACxB4B,EAAKO,OAAOH,EACd,GACF,CAgCA,SAASV,EAAIb,GAEXO,EAAOoB,KAAK3B,GACZgB,EAAO,SAAUT,GAhCV,IAAIL,SAAQ,SAAUC,GAC3B,IAAIyB,EAAWC,aAAY,WACzB,IAAI5B,EAAOa,EAAMgB,MAAK,SAAU7B,GAC9B,OAAOA,EAAKH,aACd,IAEIG,IACF8B,cAAcH,GACdzB,EAAQF,GAEZ,GAAG,IACL,IA0BG+B,MAAK,SAAU/B,GASd,OANAM,EAAO0B,OAAO1B,EAAO2B,QAAQlC,GAAO,GACpCgB,EAAO,SAAUT,GAEjBC,EAAQmB,KAAK3B,GACbgB,EAAO,UAAWR,GAEXP,EAAKF,UAAUC,EACxB,IACCgC,MAAK,WAIJ,OAFAxB,EAAQyB,OAAOzB,EAAQ0B,QAAQlC,GAAO,GACtCgB,EAAO,UAAWR,GArCf,IAAIN,SAAQ,SAAUC,GAC3B,IAAIyB,EAAWC,aAAY,WACzB,IAAIvB,EAASS,EAAQe,MAAK,SAAUxB,GAClC,OAAOA,EAAOR,aAChB,IAEIQ,IACFyB,cAAcH,GACdzB,EAAQG,GAEZ,GAAG,IACL,GA4BE,IACC0B,MAAK,SAAU1B,GAKd,OAFAG,EAAQkB,KAAK3B,GACbgB,EAAO,UAAWP,GACXH,EAAOD,YAAYC,EAC5B,IACC0B,MAAK,WAEJvB,EAAQwB,OAAOxB,EAAQyB,QAAQlC,GAAO,GACtCgB,EAAO,UAAWP,GAElB0B,QAAQC,IAAI,OACd,GACJ,C","sources":["webpack:///./src/menu.js","webpack:///./src/chef.js","webpack:///./src/server.js","webpack:///./src/index.js"],"sourcesContent":["//TODO : 파일쪼개기\r\nexport function Menu(name, time) {\r\n  this.name = name;\r\n  this.time = time;\r\n}\r\n","// ----- 요리사 객체화 --------------------------------\r\nexport function Chef() {\r\n  this.status = \"ready\"; //cooking\r\n}\r\nChef.prototype.isAvailable = function () {\r\n  return this.status == \"ready\";\r\n};\r\n//.then 붙일거면 Async 해주는 관례가 있다.\r\nChef.prototype.cookAsync = function (menu) {\r\n  var chef = this;\r\n  this.status = \"cooking\";\r\n  return new Promise(function (resolve) {\r\n    setTimeout(function () {\r\n      chef.status = \"ready\";\r\n      resolve();\r\n    }, menu.time);\r\n  });\r\n};\r\n","// ----- 서버 객체화 --------------------------------\r\nexport function Server(time) {\r\n  this.time = time;\r\n  this.status = \"ready\";\r\n}\r\nServer.prototype.isAvailable = function () {\r\n  return this.status === \"ready\";\r\n};\r\nServer.prototype.serverAsync = function (menu) {\r\n  var server = this;\r\n  this.status = \"serving\";\r\n  return new Promise(function (resolve) {\r\n    setTimeout(function () {\r\n      server.status = \"ready\";\r\n      resolve();\r\n    }, menu.time);\r\n  });\r\n};\r\n","import { Menu } from \"./menu.js\";\r\nimport { Chef } from \"./chef.js\";\r\nimport { Server } from \"./server.js\";\r\n\r\nvar orders = [];\r\nvar cooking = [];\r\nvar serving = [];\r\n\r\ndocument.getElementById(\"sundae\").onclick = function () {\r\n  run(new Menu(\"순댓국\", 2000));\r\n};\r\ndocument.getElementById(\"haejang\").onclick = function () {\r\n  run(new Menu(\"해장국\", 5000));\r\n};\r\nvar chefs = [new Chef(), new Chef()];\r\nvar servers = [new Server(2000), new Server(5000)];\r\n\r\n// ----- 렌더링 --------------------------------\r\n\r\nfunction render(id, array) {\r\n  var ulEl = document.getElementById(id);\r\n  ulEl.innerHTML = \"\";\r\n  array.forEach(function (item) {\r\n    var liEl = document.createElement(\"li\");\r\n    liEl.textContent = item.name;\r\n    ulEl.append(liEl);\r\n  });\r\n}\r\n\r\nfunction findChefAsync() {\r\n  return new Promise(function (resolve) {\r\n    var interval = setInterval(function () {\r\n      var chef = chefs.find(function (chef) {\r\n        return chef.isAvailable();\r\n      });\r\n\r\n      if (chef) {\r\n        clearInterval(interval);\r\n        resolve(chef);\r\n      }\r\n    }, 500);\r\n  });\r\n}\r\nfunction findServerAsync() {\r\n  return new Promise(function (resolve) {\r\n    var interval = setInterval(function () {\r\n      var server = servers.find(function (server) {\r\n        return server.isAvailable();\r\n      });\r\n\r\n      if (server) {\r\n        clearInterval(interval);\r\n        resolve(server);\r\n      }\r\n    }, 500);\r\n  });\r\n}\r\n\r\n// ----- 주문, 요리, 서빙 등 메인프로세스(동기-비동기, promise) --------------------------------\r\nfunction run(menu) {\r\n  //주문목록에 추가, 출력\r\n  orders.push(menu);\r\n  render(\"orders\", orders);\r\n  //대기중인 요리사 찾기.\r\n  // -- 화면이 반응할 수 있도록 여유시간을 줘야함.\r\n  //※ loadscript로 비동기작업을 어떻게 하는지. 이대로면 콜백지옥과 다를 바가 없다.\r\n  findChefAsync()\r\n    .then(function (chef) {\r\n      //요리 시킴.\r\n      //주문 목록에서 제거\r\n      orders.splice(orders.indexOf(menu), 1);\r\n      render(\"orders\", orders);\r\n      //요리 목록으로 넘어가야함\r\n      cooking.push(menu);\r\n      render(\"cooking\", cooking);\r\n\r\n      return chef.cookAsync(menu); //\"cooking\"\r\n    })\r\n    .then(function () {\r\n      //요리중.\r\n      cooking.splice(cooking.indexOf(menu), 1);\r\n      render(\"cooking\", cooking);\r\n      return findServerAsync();\r\n    })\r\n    .then(function (server) {\r\n      //서빙 시킴.\r\n      //서빙 목록으로 넘어가야함\r\n      serving.push(menu);\r\n      render(\"serving\", serving);\r\n      return server.serverAsync(server); //\"serving\"\r\n    })\r\n    .then(function () {\r\n      // 서빙 완료\r\n      serving.splice(serving.indexOf(menu), 1);\r\n      render(\"serving\", serving);\r\n\r\n      console.log(\"맛점~~\");\r\n    });\r\n}\r\n"],"names":["Menu","name","time","this","Chef","status","Server","prototype","isAvailable","cookAsync","menu","chef","Promise","resolve","setTimeout","serverAsync","server","orders","cooking","serving","document","getElementById","onclick","run","chefs","servers","render","id","array","ulEl","innerHTML","forEach","item","liEl","createElement","textContent","append","push","interval","setInterval","find","clearInterval","then","splice","indexOf","console","log"],"sourceRoot":""}